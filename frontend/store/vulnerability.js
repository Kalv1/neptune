const state = () => ({
  vuln: [],
  notes: []
})

const mutations = {
  setVuln(state, data) {
    state.notes = []
    state.vuln = data
    data.items.forEach((vuln) => {
      state.notes[vuln.name] = vuln.notes;
    })
  },

  changeState(state, data) {
    state.vuln.items.find((vuln) => vuln.id === data.cve).active = data.active
  }
}

const actions = {
  async getVulnerabilties({commit}, {page, perPage, filter}) {
    const url = urlBuilder(page, perPage, filter)
    await this.$axios.get(url).then(({data}) => {
      commit('setVuln', data)
    })
  },

  async setNotes({commit}, { cve, notes, active }) {
    await this.$axios.put(`/api/vulnerabilities/${cve}`, { notes, active })
  },

  async setAckState({commit}, { cve, notes, active }) {
    await this.$axios.put(`/api/vulnerabilities/${cve}`, { notes, active })
    commit('changeState', { cve, active })
  }
}

const urlBuilder = (page, perPage, filter) => {
  let url = `/api/vulnerabilities?page=${page}&per_page=${perPage}`
  if(filter) {
    Object.entries(filter).forEach(([key, value]) => {
      if(value) {
        url += `&${key}=${value}`
      }
    })
  }
  return url
}

export default {
  state,
  mutations,
  actions
}

