const state = () => ({
  vuln: [],
  notes: []
})

const mutations = {
  setVuln(state, data) {
    state.vuln = data.sort((x,y) => {
      return (x.active === y.active)? 0 : x? -1 : 1;
    })
    data.forEach((vuln) => {
      state.notes[vuln.name] = vuln.notes;
    })
  },

  changeState(state, data) {
    state.vuln.find((vuln) => vuln.id === data.cve).active = data.active
  }
}

const actions = {
  async getVulnerabilties({commit}) {
    await this.$axios.get('/api/vulnerabilities').then((response) => {
      commit('setVuln', response.data)
    })
  },

  async setNotes({commit}, { cve, notes, active }) {
    await this.$axios.put(`/api/vulnerabilities/${cve}`, { notes, active })
  },

  async setAckState({commit}, { cve, notes, active }) {
    await this.$axios.put(`/api/vulnerabilities/${cve}`, { notes, active })
    commit('changeState', { cve, active })
  }
}

export default {
  state,
  mutations,
  actions
}

